% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fct_metamodel.R
\name{fit_multiple_metamodel}
\alias{fit_multiple_metamodel}
\title{Fit multiple metamodel}
\usage{
fit_multiple_metamodel(
  df_multi,
  y_multi,
  x_multi,
  standardise_multi = FALSE,
  partition_multi = 1,
  seed_num_multi = 1,
  validation_multi = FALSE,
  metamodels = c("lm", "gam", "rf")
)
}
\arguments{
\item{df_multi}{a dataframe.}

\item{y_multi}{character. Name of the output variable in the dataframe. This will be the dependent variable of the metamodel.}

\item{x_multi}{character or a vector for characters. Name of the input variable in the dataframe. This will be the independent variable of the metamodel.}

\item{standardise_multi}{logical. Determine whether the parameter of the linear regression should be standardised. Default is FALSE.}

\item{partition_multi}{numeric. Value between 0 and 1 to determine the proportion of the observations to use to fit the metamodel. Default is 1 (fitting the metamodel using all observations).}

\item{seed_num_multi}{numeric. Determine which seed number to use to split the dataframe in fitting an validation sets.}

\item{validation_multi}{logical. Determine whether R2 should be calculated on the validation set.}

\item{show_intercept_multi}{logical. Determine whether to show the intercept of the perfect prediction line (x = 0, y = 0). Default is FALSE.}
}
\value{
A list with containing the fit of the model and validation estimates and plots when selected.
}
\description{
This function fits and provides summary statistics of a the metamodel included in the package (linear regression, generalised additive models, and random forest) on the input and output values of a probabilistic analysis.
}
\details{
Standardisation of the parameters is obtained by \deqn{(x - u(x)) / sd(x)}
where \eqn{x} is the variable value, \eqn{u(x)} the mean over the variable and \eqn{sd(x)} the standard deviation of \eqn{x}.
For more details, see \href{https://doi.org/10.1177/0272989X13492014}{Jalal et al. 2013}.
}
\examples{
# Fitting meta model with a single variable using the summary data
data(df_pa)
fit_multiple_metamodel(df = df_pa,
                       y = "Inc_QALY",
                       x = "p_pfsd")
                       )

# Fitting meta model with two variables using the summary data
data(df_pa)
fit_multiple_metamodel(df = df_pa,
                       y = "Inc_QALY",
                       x = c("p_pfsd", "p_pdd")
                       )

}
